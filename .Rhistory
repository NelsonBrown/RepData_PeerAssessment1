}
if (r > length(orderedcases)) {
return ("NA")
}
hospital <- orderedcases[r, 2]
hospital
}
rankhospital("TX","heart failure", 4)
rankhospital("MD","heart attack", "worst")
rankhospital <- function(state, outcome, num = "best") {
observations <- read.csv("c:\\outcome-of-care-measures.csv", colClasses = "character")
testcases <- data.frame()
states <- unique(observations$State)
outcomelist <- c("heart attack", "heart failure", "pneumonia")
if (state %in% states == FALSE) {
stop ("invalid state")
}
if (outcome %in% outcomelist == FALSE) {
stop ("invalid outcome")
}
if(outcome == outcomelist[1]) {
i <- 11
} else if (outcome == outcomelist[2]) {
i <- 17
} else {
i <- 23
}
testcases <- subset(observations, observations$State == state)
suppressWarnings(testcases[, i] <-as.numeric(testcases[, i]))
testcases <- subset(testcases, !is.na(testcases[, i]))
orderedcases <- testcases[order(-testcases[,i], testcases[,2]),]
if (num == "best") {
r <- 1
} else if(num == 'worst') {
r <- length(orderedcases)
} else  {
r <- as.numeric(num)
}
if (r > length(orderedcases)) {
return ("NA")
}
hospital <- orderedcases[r, 2]
hospital
}
rankhospital("MD","heart attack", "worst")
rankhospital("TX","heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
observations <- read.csv("c:\\outcome-of-care-measures.csv", colClasses = "character")
testcases <- data.frame()
states <- unique(observations$State)
outcomelist <- c("heart attack", "heart failure", "pneumonia")
if (state %in% states == FALSE) {
stop ("invalid state")
}
if (outcome %in% outcomelist == FALSE) {
stop ("invalid outcome")
}
if(outcome == outcomelist[1]) {
i <- 11
} else if (outcome == outcomelist[2]) {
i <- 17
} else {
i <- 23
}
testcases <- subset(observations, observations$State == state)
suppressWarnings(testcases[, i] <-as.numeric(testcases[, i]))
testcases <- subset(testcases, !is.na(testcases[, i]))
orderedcases <- testcases[order(-testcases[,i], testcases[,2]),]
if (num == "best") {
r <- 1
} else if(num == 'worst') {
r <- length(orderedcases)
} else  {
r <- as.numeric(num)
}
if (r > length(orderedcases)) {
return ("NA")
}
hospital <- orderedcases[r, 2]
hospital
i
}
rankhospital("TX","heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
observations <- read.csv("c:\\outcome-of-care-measures.csv", colClasses = "character")
testcases <- data.frame()
states <- unique(observations$State)
outcomelist <- c("heart attack", "heart failure", "pneumonia")
if (state %in% states == FALSE) {
stop ("invalid state")
}
if (outcome %in% outcomelist == FALSE) {
stop ("invalid outcome")
}
if(outcome == outcomelist[1]) {
i <- 11
} else if (outcome == outcomelist[2]) {
i <- 17
} else {
i <- 23
}
testcases <- subset(observations, observations$State == state)
suppressWarnings(testcases[, i] <-as.numeric(testcases[, i]))
testcases <- subset(testcases, !is.na(testcases[, i]))
orderedcases <- testcases[order(-testcases[,i], testcases[,2]),]
if (num == "best") {
r <- 1
} else if(num == 'worst') {
r <- length(orderedcases)
} else  {
r <- as.numeric(num)
}
if (r > length(orderedcases)) {
return ("NA")
}
hospital <- orderedcases[r, 2]
hospital
print(orderedcases[,2], orderedcases[,i])
}
rankhospital("TX","heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
observations <- read.csv("c:\\outcome-of-care-measures.csv", colClasses = "character")
testcases <- data.frame()
states <- unique(observations$State)
outcomelist <- c("heart attack", "heart failure", "pneumonia")
if (state %in% states == FALSE) {
stop ("invalid state")
}
if (outcome %in% outcomelist == FALSE) {
stop ("invalid outcome")
}
if(outcome == outcomelist[1]) {
i <- 11
} else if (outcome == outcomelist[2]) {
i <- 17
} else {
i <- 23
}
testcases <- subset(observations, observations$State == state)
suppressWarnings(testcases[, i] <-as.numeric(testcases[, i]))
testcases <- subset(testcases, !is.na(testcases[, i]))
orderedcases <- testcases[order(rev(testcases[,i]), testcases[,2]),]
if (num == "best") {
r <- 1
} else if(num == 'worst') {
r <- length(orderedcases)
} else  {
r <- as.numeric(num)
}
if (r > length(orderedcases)) {
return ("NA")
}
hospital <- orderedcases[r, 2]
hospital
print(orderedcases[,2], orderedcases[,i])
}
rankhospital("TX","heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
observations <- read.csv("c:\\outcome-of-care-measures.csv", colClasses = "character")
testcases <- data.frame()
states <- unique(observations$State)
outcomelist <- c("heart attack", "heart failure", "pneumonia")
if (state %in% states == FALSE) {
stop ("invalid state")
}
if (outcome %in% outcomelist == FALSE) {
stop ("invalid outcome")
}
if(outcome == outcomelist[1]) {
i <- 11
} else if (outcome == outcomelist[2]) {
i <- 17
} else {
i <- 23
}
testcases <- subset(observations, observations$State == state)
suppressWarnings(testcases[, i] <-as.numeric(testcases[, i]))
testcases <- subset(testcases, !is.na(testcases[, i]))
orderedcases <- testcases[order(-(testcases[,i]), testcases[,2]),]
if (num == "best") {
r <- 1
} else if(num == 'worst') {
r <- length(orderedcases)
} else  {
r <- as.numeric(num)
}
if (r > length(orderedcases)) {
return ("NA")
}
hospital <- orderedcases[r, 2]
hospital
print(orderedcases[,2], orderedcases[,i])
}
rankhospital("TX","heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
observations <- read.csv("c:\\outcome-of-care-measures.csv", colClasses = "character")
testcases <- data.frame()
states <- unique(observations$State)
outcomelist <- c("heart attack", "heart failure", "pneumonia")
if (state %in% states == FALSE) {
stop ("invalid state")
}
if (outcome %in% outcomelist == FALSE) {
stop ("invalid outcome")
}
if(outcome == outcomelist[1]) {
i <- 11
} else if (outcome == outcomelist[2]) {
i <- 17
} else {
i <- 23
}
testcases <- subset(observations, observations$State == state)
suppressWarnings(testcases[, i] <-as.numeric(testcases[, i]))
testcases <- subset(testcases, !is.na(testcases[, i]))
orderedcases <- testcases[order(testcases[,2], -testcases[,i]),]
if (num == "best") {
r <- 1
} else if(num == 'worst') {
r <- length(orderedcases)
} else  {
r <- as.numeric(num)
}
if (r > length(orderedcases)) {
return ("NA")
}
hospital <- orderedcases[r, 2]
hospital
print(orderedcases[,2], orderedcases[,i])
}
rankhospital("TX","heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
observations <- read.csv("c:\\outcome-of-care-measures.csv", colClasses = "character")
testcases <- data.frame()
states <- unique(observations$State)
outcomelist <- c("heart attack", "heart failure", "pneumonia")
if (state %in% states == FALSE) {
stop ("invalid state")
}
if (outcome %in% outcomelist == FALSE) {
stop ("invalid outcome")
}
if(outcome == outcomelist[1]) {
i <- 11
} else if (outcome == outcomelist[2]) {
i <- 17
} else {
i <- 23
}
testcases <- subset(observations, observations$State == state)
suppressWarnings(testcases[, i] <-as.numeric(testcases[, i]))
testcases <- subset(testcases, !is.na(testcases[, i]))
orderedcases <- testcases[order(-testcases[,i], -testcases[,2]),]
if (num == "best") {
r <- 1
} else if(num == 'worst') {
r <- length(orderedcases)
} else  {
r <- as.numeric(num)
}
if (r > length(orderedcases)) {
return ("NA")
}
hospital <- orderedcases[r, 2]
hospital
print(orderedcases[,2], orderedcases[,i])
}
rankhospital("TX","heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
observations <- read.csv("c:\\outcome-of-care-measures.csv", colClasses = "character")
testcases <- data.frame()
states <- unique(observations$State)
outcomelist <- c("heart attack", "heart failure", "pneumonia")
if (state %in% states == FALSE) {
stop ("invalid state")
}
if (outcome %in% outcomelist == FALSE) {
stop ("invalid outcome")
}
if(outcome == outcomelist[1]) {
i <- 11
} else if (outcome == outcomelist[2]) {
i <- 17
} else {
i <- 23
}
testcases <- subset(observations, observations$State == state)
suppressWarnings(testcases[, i] <-as.numeric(testcases[, i]))
testcases <- subset(testcases, !is.na(testcases[, i]))
orderedcases <- testcases[order(-testcases[,i], testcases[,2]),]
if (num == "best") {
r <- 1
} else if(num == 'worst') {
r <- length(orderedcases)
} else  {
r <- as.numeric(num)
}
if (r > length(orderedcases)) {
return ("NA")
}
hospital <- orderedcases[r, 2]
hospital
print(orderedcases[,2], orderedcases[,i])
}
rankhospital("TX","heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
observations <- read.csv("c:\\outcome-of-care-measures.csv", colClasses = "character")
testcases <- data.frame()
states <- unique(observations$State)
outcomelist <- c("heart attack", "heart failure", "pneumonia")
if (state %in% states == FALSE) {
stop ("invalid state")
}
if (outcome %in% outcomelist == FALSE) {
stop ("invalid outcome")
}
if(outcome == outcomelist[1]) {
i <- 11
} else if (outcome == outcomelist[2]) {
i <- 17
} else {
i <- 23
}
testcases <- subset(observations, observations$State == state)
suppressWarnings(testcases[, i] <-as.numeric(testcases[, i]))
testcases <- subset(testcases, !is.na(testcases[, i]))
orderedcases <- testcases[order(testcases[,i]* -1, testcases[,2]),]
if (num == "best") {
r <- 1
} else if(num == 'worst') {
r <- length(orderedcases)
} else  {
r <- as.numeric(num)
}
if (r > length(orderedcases)) {
return ("NA")
}
hospital <- orderedcases[r, 2]
hospital
print(orderedcases[,2], orderedcases[,i])
}
rankhospital("TX","heart failure", 4)
?length
?max
q()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
ls()
rm(list=ls())
swirl()
?read.csv()
mydf <- read.csv(path2csv, stringAsFactors=FALSE)
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm(mydf)
rm("mydf")
cran
?manip
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -x:size)
cran
select(cran, -X:size)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size> 100500 | r_os == "linux-gnu")
filter(cran, size> 100500, r_os == "linux-gnu")
try is.na(c(3,5,NA,10))
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^19)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package,  avg_bytes = mean(size))
summarize(by_package, avg_bytes = mean(size))
summarize(by_package, mean(size))
pack_sum <- summarize(by_package,
count = ,
unique = ,
countries = ,
avg_bytes = )
avg_bytes = mean(size))
pack_sum <- summarize(by_package,
count = count = n(),
unique = unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
submit()
by_package
reset()
?n
?n_distinct
submit()
avg_bytes = mean(size))
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
submit()
?n
pack_sum <- summarize(by_package,
count = n(by_package),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
by_package
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
submit()
pack_sum <- summarize(by_package, count = n(), unique = n_distinct(ip_id), countries = n_distinct(country), avg_bytes = mean(size))
pack_sum
submit()
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
submit()
reset()
submit
submit()
reset()
submit()
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
submit()
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
help.search("running script files")
q()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique < 465)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange (top_unique, desc(unique))
submit()
submit()
submit()
submit()
submit
submit()
submit()
submit()
submit()
q()
tables()
library(data.table)
q()
install.packages("RMySQL",type="source")
rhome()
R.home()
install.packages("RMySQL",type="source")
install.packages("RMySQL",type="source")
q()
*Goes from raw data to data products
library(knitr)
knit2html()
knit2html("C:/Coursera/RepData_PeerAssessment1/RepData_Pa1.Rmd")
knit2html("C:/Coursera/RepData_PeerAssessment1/RepData_Pa1.Rmd")
setwd("C:/Coursera/RepData_PeerAssessment1")
knit2html("C:/Coursera/RepData_PeerAssessment1/RepData_Pa1.Rmd")
